import java.util.*;
import java.io.File;
import java.io.FileNotFoundException;
/*
I get annoyed when I have to both convince myself to workout AND figure out what exercises to do.
So I made a program that will (psuedo)randomly generate exercises for me and my brother to do based on the muscles we want to work.
If one muscle is input as the argument, this program will output 5 exercises that work that muscle.
If two muscles are input as the arguments, 2 exercises for each muscle will be output.
I used these numbers as it reflects the number of exercises we would typically do anyway but it could easily be altered to other values.
This will hopefully make working out at home at least slightly easier.
Compile Exercise.java followed by this file and as long as exercises.txt is in the same directory, this will run.
In bash this looked like:
	javac Exercise.java
	javac Workout.java
	java Workout Chest Bicep
	(Chest/Bicep can be substituted for any muscle in the text file but there must be at least one argument input)
There are a fair number of limitations in this program that I did not address as I only intend it for personal use.
Some obvious limitations:
	-Doesn't handle 0 or >2 arguments input
	-Doesn't handle incorrect inputs
	-Not very readable/user-friendly txt file for reading/adding exercises
	-Strict format requirements of txt file(need every Exercise to have every piece of information)
*/
public class Workout{
	public static void main(String[] args){
		//ArrayList that will store the objects generated by scanning a text file I made 
		List<Exercise> exercises = new ArrayList<Exercise>();
		try{
			Scanner input = new Scanner(new File("exercises.txt"));
			//Used this as my delimiter due to format of exercises in the txt file
			input.useDelimiter("/|\n");
			

			while(input.hasNext()){
				String name = input.next();
				String muscle = input.next();
				String reps = input.next();
				String sets = input.next();
				String weights = input.next();
				//Utilizes constructor from Exercise.java to create Exercise objects with the parameters in text file.
				Exercise newExercise = new Exercise(name, muscle, reps, sets, weights);
				exercises.add(newExercise);
			}
			/*for (Exercise exercise : exercises){
				System.out.println(exercise);
			}*/
		}
		catch (FileNotFoundException e){
			System.out.println("An error occurred.");
			e.printStackTrace();
		}

		//ArrayLists of Exercise objects that will be used to store exercises by muscle-type
		List<Exercise> muscleGroup1 = new ArrayList<Exercise>();
		List<Exercise> muscleGroup2 = new ArrayList<Exercise>();

		//Populates the recently initialized ArrayLists with appropriate exercises
		for (Exercise exercise : exercises){
			if((exercise.getMuscle()).equals(args[0])) {
				muscleGroup1.add(exercise);
			}
			if(args.length==2){
				if((exercise.getMuscle()).equals(args[1])) {
					muscleGroup2.add(exercise);
				}
			}
			//System.out.println(exercise.getMuscle());
		}
		//Final selection of exercises will be stored in this ArrayList
		List<Exercise> selectedExercises = new ArrayList<Exercise>();

		Random rand = new Random();
		int randomExercise;
		if(args.length==2){
			//Only needed 2 of each type of exercise
			for(int i = 0; i<2; i++){
				randomExercise = rand.nextInt(muscleGroup1.size());
				selectedExercises.add(muscleGroup1.get(randomExercise));
				muscleGroup1.remove(randomExercise);

				randomExercise = rand.nextInt(muscleGroup2.size());
				selectedExercises.add(muscleGroup2.get(randomExercise));
				muscleGroup2.remove(randomExercise);
			}
			//Output of exercises to do
			for (Exercise exercise : selectedExercises){
					System.out.println(exercise);
				}
			}
		if (args.length==1){
			//Typically I'd use this only for core workouts, but I decided to generalize it just in case
			for(int i = 0; i<5; i++){
				randomExercise = rand.nextInt(muscleGroup1.size());
				selectedExercises.add(muscleGroup1.get(randomExercise));
				muscleGroup1.remove(randomExercise);
			}
			//Output of exercises to do
			for (Exercise exercise : selectedExercises){
					System.out.println(exercise);
				}
		}


	}
}
